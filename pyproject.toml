[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "giflab"
version = "0.1.0"
description = "GIF compression and analysis laboratory"
authors = ["GifLab Team <team@giflab.example>"]
readme = "README.md"
packages = [{include = "giflab", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
PyYAML = "^6.0"
pillow = "^10.0.0"
numpy = "^1.24.0"
pandas = "^2.0.0"
opencv-python = "^4.8.0"
scikit-image = "^0.24.0"
pydantic = ">=2.5"
matplotlib = "^3.8.0"
scikit-learn = "^1.4.0"
click = "^8.1.0"
tqdm = "^4.65.0"
psutil = "^5.9.0"
torch = "^2.0.0"
open-clip-torch = "^2.32.0"
gitpython = "^3.1.45"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.0"
black = "^23.7.0"
ruff = "^0.0.287"
mypy = "^1.5.0"
jupyter = "^1.0.0"
ipykernel = "^6.25.0"
pytest-progress = "^1.3.0"

[tool.poetry.scripts]
giflab = "giflab.cli:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E402",  # module import not at top of file
    "W293",  # blank line contains whitespace
    "B904",  # raise without from err
    "B017",  # blind exception assertions
    "F401",  # imported but unused (allowed in re-export modules)
]
exclude = [
    "notebooks/*",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["E501"]
"src/giflab/__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q", 
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--disable-warnings",
    "--maxfail=5",
    "-x"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests (fast)",
    "external_tools: marks tests that require external tools (gifsicle, imagemagick, etc.)",
]
# Performance optimizations
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
# Disable expensive features during testing
cache_dir = ".pytest_cache"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "skimage.*",
]
ignore_missing_imports = true 